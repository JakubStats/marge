% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MARGE_package.R
\name{predict.marge}
\alias{predict.marge}
\title{predict.marge}
\usage{
\method{predict}{marge}(object, newdata, X_pred, is.marge = FALSE, pen = "2", ...)
}
\arguments{
\item{object}{: the final selected MARS/MARGE model. Only works for \code{mars_ls} and \code{marge} model objects.}

\item{newdata}{: the new set of predictor variables to make predictions on (test data).}

\item{X_pred}{: the training predictor variable values from the fitted MARS/MARGE model.}

\item{is.marge}{: a logical argument, is this a MARGE model? The default is \code{FALSE}.}

\item{pen}{: the penalty used for the MARGE model (only applicable if \code{marge} was used). The default is \code{pen = 2}.}

\item{...}{: further arguments passed to or from other methods.}
}
\value{
\code{predict.marge} returns a list of calculated values consisting of:

\code{eta.p} : the fitted linear predictor using the new (test) data.

\code{basis_new} : the model matrix for the new (test) data.
}
\description{
A predict-type function for fitted MARS and MARGE objects when using the \code{marge} package.
}
\examples{
# Load the "leptrine" presence-absence data.

data(leptrine)

dat1 <- leptrine[[1]]   # Training data.
dat1_t <- leptrine[[2]] # Test data.

Y <- dat1$Y             # Response variable.
N <- length(Y)          # Sample size (number of clusters).
n <- 1                  # Cluster size.
id <- rep(1:N, each = n)   # The ID of each cluster.

X_pred <- dat1[, -c(3:10)]    # Design matrix using only two (of nine) predictors.
X_predt <- dat1_t[, -c(4:11)]

# Set MARGE tuning parameters.

family <- "binomial"    # The selected "exponential" family for the GLM/GEE.
is.gee <- FALSE         # Is the model a GEE?
nb <- FALSE             # Is this a negative binomial model?
tols_score <- 0.0001    # A set tolerance (stopping condition) in forward pass for MARGE.
M <- 21                 # A set threshold for the maximum number of basis functions to be used.
print.disp <- FALSE     # Print ALL the output?
pen <- 2                # Penalty to be used in GCV.
minspan <- NULL         # A set minimum span value.

# Fit the MARGE models (about ~ 30 secs.)

model_marge <- marge(X_pred, Y, N, n, id, family, corstr, pen, tols_score,
                     M, minspan, print.disp, nb, is.gee)

# Predict on training data.

pred_marge_2_y <- predict(model_marge, X_predt, X_pred, TRUE, "2")

pred_marge_log_y <- predict(model_marge, X_predt, X_pred, TRUE, "logN")
}
\references{
Stoklosa, J. and Warton, D.I. (2018). A generalized estimating equation approach to multivariate adaptive regression splines. \emph{Journal of Computational and Graphical Statistics}, \strong{27}, 245--253.
}
\author{
Jakub Stoklosa and David I. Warton.
}
